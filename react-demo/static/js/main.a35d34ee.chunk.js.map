{"version":3,"sources":["actions/index.js","reducers/todos.js","reducers/filters.js","reducers/index.js","components/Link.jsx","containers/FilterLink.js","components/Footer.jsx","containers/AddTodo.jsx","components/Todo.jsx","components/TodoList.jsx","containers/VisibleToDoList.js","components/App.jsx","index.jsx"],"names":["nextTodoId","todoConsts","filterConsts","todos","state","action","type","id","text","completed","map","todo","visibilityFilter","filter","combineReducers","Link","active","children","onClick","disabled","style","marginLeft","connect","ownProps","dispatch","Footer","FilterLink","input","onSubmit","event","preventDefault","value","trim","ref","node","Todo","textDecoration","TodoList","toggleTodo","key","getVisibleTodos","Error","App","VisibleToDoList","store","createStore","rootReducer","render","document","getElementById"],"mappings":"kNAEIA,EAAa,EAOV,IAAMC,EACD,WADCA,EAEE,cAFFA,EAGY,wBAGZC,EACD,WADCA,EAEK,iBAFLA,EAGE,cCMAC,EAtBD,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCACpC,OAAQA,EAAOC,MACb,KAAKL,EACH,MAAM,GAAN,mBACKG,GADL,CAEE,CACEG,GAAIF,EAAOE,GACXC,KAAMH,EAAOG,KACbC,WAAW,KAGjB,KAAKR,EACH,OAAOG,EAAMM,KAAI,SAACC,GAAD,OACfA,EAAKJ,KAAOF,EAAOE,GAAnB,eACSI,EADT,CACeF,WAAYE,EAAKF,YAC5BE,KAER,QACE,OAAOP,ICTEQ,EATU,WAA4C,IAA3CR,EAA0C,uDAAlCF,EAAuBG,EAAW,uCAClE,OAAQA,EAAOC,MACb,KAAKL,EACH,OAAOI,EAAOQ,OAChB,QACE,OAAOT,ICFEU,cAAgB,CAC7BX,QACAS,qBCaaG,EAjBF,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,SAAUC,EAArB,EAAqBA,QAArB,OACX,4BACEZ,KAAK,SACLY,QAASA,EACTC,SAAUH,EACVI,MAAO,CAAEC,WAAY,QAEpBJ,ICGUK,eARS,SAAClB,EAAOmB,GAAR,MAAsB,CAC5CP,OAAQO,EAASV,SAAWT,EAAMQ,qBAGT,SAACY,EAAUD,GAAX,MAAyB,CAClDL,QAAS,kBAAMM,GLsBmBX,EKtBUU,EAASV,OLsBP,CAC9CP,KAAML,EACNY,YAFiC,IAACA,MKnBrBS,CAA6CP,GCA7CU,EATA,kBACb,6BACE,wCACA,kBAACC,EAAD,CAAYb,OAAQX,GAApB,OACA,kBAACwB,EAAD,CAAYb,OAAQX,GAApB,UACA,kBAACwB,EAAD,CAAYb,OAAQX,GAApB,eC2BWoB,iBA9BC,SAAC,GAAkB,IAC7BK,EADaH,EAAe,EAAfA,SAGjB,OACE,6BACE,0BACEI,SAAU,SAACC,GPSI,IAACrB,GORdqB,EAAMC,iBACDH,EAAMI,MAAMC,UAGjBR,GPIchB,EOJGmB,EAAMI,MPIC,CAChCzB,KAAML,EACNM,GAlBAP,GAAc,EAmBdQ,UONQmB,EAAMI,MAAQ,MAGhB,2BAAOE,IAAK,SAACC,GAEX,OADAP,EAAQO,KAIV,4BAAQ5B,KAAK,UAAb,iBCLO6B,EAfF,SAAC,GAAD,IAAGjB,EAAH,EAAGA,QAAST,EAAZ,EAAYA,UAAWD,EAAvB,EAAuBA,KAAvB,OACX,wBACEU,QAASA,EACTE,MAAO,CAAEgB,eAAgB3B,EAAY,eAAiB,SAEpDD,ICkBS6B,EAxBE,SAAC,GAAD,IAAGlC,EAAH,EAAGA,MAAOmC,EAAV,EAAUA,WAAV,OACf,4BACGnC,EAAMO,KAAI,SAACC,GAAD,OACT,kBAAC,EAAD,CACE4B,IAAK5B,EAAKJ,GACVW,QAAS,kBAAMoB,EAAW3B,EAAKJ,KAC/BE,UAAWE,EAAKF,UAChBD,KAAMG,EAAKH,YCPbgC,EAAkB,SAACrC,EAAOU,GAC9B,OAAQA,GACN,KAAKX,EACH,OAAOC,EACT,KAAKD,EACH,OAAOC,EAAMU,QAAO,SAACF,GAAD,OAAUA,EAAKF,aACrC,KAAKP,EACH,OAAOC,EAAMU,QAAO,SAACF,GAAD,OAAWA,EAAKF,aACtC,QACE,MAAM,IAAIgC,MAAJ,0BAA6B5B,MAY1BS,eARS,SAAClB,GAAD,MAAY,CAClCD,MAAOqC,EAAgBpC,EAAMD,MAAOC,EAAMQ,sBAGjB,SAACY,GAAD,MAAe,CACxCc,WAAY,SAAC/B,GAAD,OAAQiB,EVII,SAACjB,GAAD,MAAS,CACjCD,KAAML,EACNM,MUN6B+B,CAAW/B,QAG3Be,CAA6Ce,GCV7CK,EAVH,kBACV,6BACE,wCACA,4DACA,kBAAC,EAAD,MACA,kBAACC,EAAD,MACA,kBAAC,EAAD,QCJEC,EAAQC,YAAYC,GAE1BC,iBACE,kBAAC,IAAD,CAAUH,MAAOA,GACf,kBAAC,EAAD,OAEFI,SAASC,eAAe,W","file":"static/js/main.a35d34ee.chunk.js","sourcesContent":["/* == actions == */\n\nlet nextTodoId = 0;\n\nfunction incrementId() {\n  nextTodoId += 1;\n  return nextTodoId;\n}\n\nexport const todoConsts = {\n  ADD_TODO: 'ADD_TODO',\n  TOGGLE_TODO: 'TOGGLE_TODO',\n  SET_VISIBILITY_FILTER: 'SET_VISIBILITY_FILTER',\n};\n\nexport const filterConsts = {\n  SHOW_ALL: 'SHOW_ALL',\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\n  SHOW_ACTIVE: 'SHOW_ACTIVE',\n};\n\nexport const addTodo = (text) => ({\n  type: todoConsts.ADD_TODO,\n  id: incrementId(),\n  text,\n});\n\nexport const toggleTodo = (id) => ({\n  type: todoConsts.TOGGLE_TODO,\n  id,\n});\n\nexport const setVisibilityFilter = (filter) => ({\n  type: todoConsts.SET_VISIBILITY_FILTER,\n  filter,\n});\n","import { todoConsts } from '../actions';\n\nconst todos = (state = [], action) => {\n  switch (action.type) {\n    case todoConsts.ADD_TODO:\n      return [\n        ...state,\n        {\n          id: action.id,\n          text: action.text,\n          completed: false,\n        },\n      ];\n    case todoConsts.TOGGLE_TODO:\n      return state.map((todo) => (\n        todo.id === action.id\n          ? { ...todo, completed: !todo.completed }\n          : todo\n      ));\n    default:\n      return state;\n  }\n};\n\nexport default todos;\n","import { filterConsts, todoConsts } from '../actions';\n\nconst visibilityFilter = (state = filterConsts.SHOW_ALL, action) => {\n  switch (action.type) {\n    case todoConsts.SET_VISIBILITY_FILTER:\n      return action.filter;\n    default:\n      return state;\n  }\n};\n\nexport default visibilityFilter;\n","import { combineReducers } from 'redux';\n\nimport todos from './todos';\nimport visibilityFilter from './filters';\n\nexport default combineReducers({\n  todos,\n  visibilityFilter,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Link = ({ active, children, onClick }) => (\n  <button\n    type=\"button\"\n    onClick={onClick}\n    disabled={active}\n    style={{ marginLeft: '4px' }}\n  >\n    {children}\n  </button>\n);\n\nLink.propTypes = {\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Link;\n","import { connect } from 'react-redux';\n\nimport { setVisibilityFilter } from '../actions';\nimport Link from '../components/Link';\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.filter === state.visibilityFilter,\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onClick: () => dispatch(setVisibilityFilter(ownProps.filter)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Link);\n","import React from 'react';\nimport FilterLink from '../containers/FilterLink';\nimport { filterConsts } from '../actions';\n\nconst Footer = () => (\n  <div>\n    <span>Show: </span>\n    <FilterLink filter={filterConsts.SHOW_ALL}>All</FilterLink>\n    <FilterLink filter={filterConsts.SHOW_ACTIVE}>Active</FilterLink>\n    <FilterLink filter={filterConsts.SHOW_COMPLETED}>Completed</FilterLink>\n  </div>\n);\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { addTodo } from '../actions';\n\nconst AddTodo = ({ dispatch }) => {\n  let input;\n\n  return (\n    <div>\n      <form\n        onSubmit={(event) => {\n          event.preventDefault();\n          if (!input.value.trim()) {\n            return;\n          }\n          dispatch(addTodo(input.value));\n          input.value = '';\n        }}\n      >\n        <input ref={(node) => {\n          input = node;\n          return input;\n        }}\n        />\n        <button type=\"submit\">Add Todo</button>\n      </form>\n    </div>\n  );\n};\n\nAddTodo.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default connect()(AddTodo);\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Todo = ({ onClick, completed, text }) => (\n  <li\n    onClick={onClick}\n    style={{ textDecoration: completed ? 'line-through' : 'none' }}\n  >\n    { text }\n  </li>\n);\n\nTodo.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  completed: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport default Todo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Todo from './Todo';\n\nconst TodoList = ({ todos, toggleTodo }) => (\n  <ul>\n    {todos.map((todo) => (\n      <Todo\n        key={todo.id}\n        onClick={() => toggleTodo(todo.id)}\n        completed={todo.completed}\n        text={todo.text}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n      text: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  toggleTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import { connect } from 'react-redux';\n\nimport { toggleTodo, filterConsts } from '../actions';\nimport TodoList from '../components/TodoList';\n\nconst getVisibleTodos = (todos, filter) => {\n  switch (filter) {\n    case filterConsts.SHOW_ALL:\n      return todos;\n    case filterConsts.SHOW_COMPLETED:\n      return todos.filter((todo) => todo.completed);\n    case filterConsts.SHOW_ACTIVE:\n      return todos.filter((todo) => !todo.completed);\n    default:\n      throw new Error(`Unknown filter: ${filter}`);\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  todos: getVisibleTodos(state.todos, state.visibilityFilter),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  toggleTodo: (id) => dispatch(toggleTodo(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\n","import React from 'react';\n\nimport Footer from './Footer';\nimport AddTodo from '../containers/AddTodo';\nimport VisibleToDoList from '../containers/VisibleToDoList';\n\nconst App = () => (\n  <div>\n    <h1>Todo App</h1>\n    <p>Demo app using React + Redux.</p>\n    <AddTodo />\n    <VisibleToDoList />\n    <Footer />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nimport rootReducer from './reducers';\nimport App from './components/App';\n\nconst store = createStore(rootReducer);\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}